<!DOCTYPE HTML>
<!DOCTYPE html PUBLIC "" ""><!-- saved from url=(0036)https://www.key.com/locations/search --><HTML 
class="no-js" lang="en"><HEAD prefix="og: http://ogp.me/ns# fb: http://ogp.en/ns/fb# website: http://ogp.me/ns/website#"><META 
content="IE=11.0000" http-equiv="X-UA-Compatible">

<META http-equiv="X-UA-Compatible" content="IE=11.0000">      
<META charset="utf-8">     
<META http-equiv="x-ua-Compatible" content="IE=edge">     
<META name="viewport" content="width=device-width, initial-scale=1">	 
<META name="description" content="Store Locator"> <TITLE>Branch Locator | 
 KeyBank</TITLE> <LINK href="https://www.key.com/locations/search" rel="canonical"> 

<META content="https://www.key.com/locations/search" property="og:url"> 
<META content="Branch Locator | KeyBank" property="og:title"> 
<META content="Store Locator" property="og:description"> 
<META content="https://www.key.com/kco/images/key_social_logo.png" property="og:image"> 

<META content="Key.com" property="og:site_name"> 
<META content="website" property="og:type"> 
<META content="143790482303586" property="fb:app_id"> 
<META name="twitter:card" content="summary_large_image"> 
<META name="twitter:site" content="@keybank"> 
<META name="twitter:creator" content="@keybank"> 
<META name="twitter:title" content="Branch Locator | KeyBank"> 
<META name="twitter:description" content="Store Locator"> 
<META name="twitter:image" content="https://www.key.com/kco/images/key_social_logo.png"> 

<META name="twitter:url" content="https://www.key.com/locations/search">     
<LINK href="/kco/images/favicon.ico" rel="icon" type="image/x-icon">     <LINK 
href="/kco/images/favicon.ico" rel="shortcut icon" type="image/x-icon">	 
<SCRIPT>document.documentElement.className = document.documentElement.className.replace(/\bno-js\b/,'js is--loading');</SCRIPT>
	  <LINK href="Branch%20Locator%20%20KeyBank_files/styles.min.css" rel="stylesheet">
	  <LINK href="Branch%20Locator%20%20KeyBank_files/locations.min.css" rel="stylesheet">
	  
<SCRIPT type="text/javascript"> 
		var COPYRIGHT_FOOTER_DATE= "2018";
		var enableSmartTarget = true;
		var serviceUrl = "https://www.key.com/loc/DirectorServlet";
	</SCRIPT>
	  
<SCRIPT src="Branch_Locator_KeyBank_files/satelliteLib-a3fe21fc90211a1ec48589ac09b160082c4281d1.js"></SCRIPT>
   <!-- Page Title : Search Page
	Page ID : tcm:24-74700-64
	Page Template : Modular Locator PT --> 

<META name="GENERATOR" content="MSHTML 11.00.9600.19003"></HEAD> 
<BODY class="kco general locations ">
<SCRIPT type="text/javascript">
// framing prevention
if (self == top) {
  var theBody = document.getElementsByTagName('body')[0];
  theBody.style.display = "block";
} else { 
   top.location = self.location; 
}
</SCRIPT>
	  <A class="sr-only sr-only-focusable" href="https://www.key.com/locations/search#main">Skip 
 to Main Content</A>	 
<DIV class="wrapper"><HEADER class="header"><!-- Segment Picker --> 
<DIV class="segment-picker" id="segmentPicker"><!--  <button id="setDefaultPage" class="segment-picker__defaultBtn" aria-hidden="true">Make this <span class="sr-only">&nbsp;</span>my KeyBank entry page</button> --> 
<SPAN class="segment-picker__heading" id="segmentToggle">KeyBank Services</SPAN><!-- segmentNavigation --> 

<UL class="segment-picker__list">
  <LI class="segment-picker__li"><A class="segment-picker__a" href="https://www.key.com/personal/index.jsp" 
  target="_parent"><SPAN class="sr-only"> Go to </SPAN>Personal<SPAN class="sr-only"> 
    Banking Home Page </SPAN></A></LI>
  <LI class="segment-picker__li"><A class="segment-picker__a" href="https://www.key.com/kpb/index.jsp" 
  target="_parent"><SPAN class="sr-only"> Go to </SPAN>Wealth Management<SPAN 
  class="sr-only"> Banking Home Page </SPAN></A></LI>
  <LI class="segment-picker__li"><A class="segment-picker__a" href="https://www.key.com/business/index.jsp" 
  target="_parent"><SPAN class="sr-only"> Go to </SPAN>Business<SPAN class="sr-only"> 
    Banking Home Page </SPAN></A></LI>
  <LI class="segment-picker__li"><A class="segment-picker__a" href="https://www.key.com/corporate/index.jsp" 
  target="_parent"><SPAN class="sr-only"> Go to </SPAN>Corporate<SPAN class="sr-only"> 
    Banking Home Page </SPAN></A></LI>
  <LI class="segment-picker__li"><A class="segment-picker__a" href="https://www.key.com/about/index.jsp" 
  target="_parent"><SPAN class="sr-only"> Go to </SPAN>About Key<SPAN class="sr-only"> 
    Banking Home Page </SPAN></A></LI></UL></DIV><!-- Logo --> 
<DIV class="logo"><A class="logo__a" href="https://www.key.com/personal/index.jsp"><SPAN 
class="sr-only">KeyBank</SPAN> </A> </DIV><!-- Search Box --> 
<DIV class="search-box">
<FORM name="theform" class="search-box__form" id="theform" role="search" action="https://www.key.com/to/search+query" 
method="get"><INPUT name="t" type="hidden"> <LABEL class="sr-only" for="searchInput">Enter 
 a Search  Term</LABEL><INPUT name="qt" class="input" id="searchInput" type="text" placeholder="I am looking for..." value=""><BUTTON 
class="btn btn--small submit-button" type="submit" form="theform" 
value="Search"><SPAN class="sr-only">Search</SPAN> </BUTTON> </FORM></DIV><!--Utility Nav --> 
<DIV class="utility-nav">
<UL class="utility-nav__list">
  <LI class="utility-nav__li"><A class="utility-nav__a" href="https://www.key.com/to/key+atmlocator">Locations</A></LI>
  <LI class="utility-nav__li"><A class="utility-nav__a" href="https://www.key.com/about/customer-service/key-bank-customer-service.jsp">Contact 
    Us</A></LI>
  <LI class="utility-nav__li"><A class="utility-nav__a" href="https://www.key.com/personal/financial-wellness/index.jsp">Financial 
    Wellness</A></LI></UL></DIV><!-- Navigation -->     </HEADER>		 <main id="main"><!-- Main body--><!--Breadcrumb--><!--Breadcrumb Ends --> 
<SECTION class="container locations--search locations--results">
<DIV class="locations-nav">
<DIV class="locations-nav__wrap search-wrap">
<P class="locations-nav__title-desktop">Find a Branch, ATM or Key Private Bank 
 office</P><NAV class="breadcrumb" id="breadcrumb" 
aria-label="Breadcrumbs"></NAV>										    
<DIV class="locations-nav__content">
<FORM class="locations-nav__form" onsubmit="find(); return false;">
<DIV class="input-group">
<DIV 
class="text-input"><INPUT id="locationSearch" aria-required="true" required="" type="text" placeholder="Search by city and state or ZIP code" value="" data-error-message="Please provide a city, state or zip code"><LABEL 
for="locationSearch" data-label="Search by city and state, or ZIP Code"><SPAN 
class="sr-only">Search by city and state, or ZIP Code</SPAN>															  
</LABEL></DIV><BUTTON class="btn" value="Find">Find</BUTTON>													  
</DIV></FORM></DIV></DIV></DIV>
<DIV class="grid__wrap grid--results">
<DIV class="btn__toggle-mobile">
<UL id="resultTabs">
  <LI><A class="toggle__list" 
  href="https://www.key.com/locations/search#list">List</A></LI>
  <LI><A class="toggle__map" 
  href="https://www.key.com/locations/search#map">Map</A></LI></UL></DIV>
<DIV class="tab-list" id="list">
<DIV class="filter">
<DIV class="filter__content">
<FORM class="filter__form" id="filterForm" aria-labelledby="typesHeading"><SPAN 
class="filter__heading" id="typesHeading">Filter Your Search</SPAN>
<DIV class="select">
<DIV class="select-control"><SELECT name="entity" id="filterTypes"><OPTION 
  selected="selected" value="BRCH">Branch Only</OPTION>				                      
                               <OPTION value="ATM">ATM Only</OPTION>				         
                                            <OPTION value="MCD">Key Private   
  Bank</OPTION>				                                                 <OPTION 
  value="partner">Partner ATM</OPTION>				                                       
          </SELECT>				                                         </DIV><LABEL for="filterTypes"><SPAN 
class="sr-only">Filter by type of location</SPAN></LABEL></DIV><SPAN class="filter__toggle" 
id="advancedHeading" data-collapsible="">Advanced Filters</SPAN>
<DIV class="filter__group" aria-labelledby="advancedHeading">
<FIELDSET id="BRCHGroup"><LEGEND class="filter__subheading">Branch <SPAN class="sr-only">Filters</SPAN></LEGEND>
				                                              
<DIV class="filter__checkboxes">
<DIV class="checkbox"><INPUT name="BRCH_property" id="plus" type="checkbox" 
value="KeyPlus">				                                                     <LABEL 
for="plus">KeyBank Plus</LABEL>				                                              
   </DIV>
<DIV class="checkbox"><INPUT name="BRCH_property" id="boxes" type="checkbox" 
value="SafeDeposit">				                                                     
<LABEL for="boxes">Safe Deposit Boxes</LABEL>				                                
                 </DIV>
<DIV class="checkbox"><INPUT name="BRCH_property" id="nightDeposit" type="checkbox" 
value="NightDeposit">				                                                     
<LABEL for="nightDeposit">Night Deposit</LABEL>				                              
                   </DIV>
<DIV class="checkbox"><INPUT name="BRCH_property" id="driveThru" type="checkbox" 
value="DriveThru">				                                                     
<LABEL for="driveThru">Drive Thru</LABEL>				                                    
             </DIV>
<DIV class="checkbox"><INPUT name="BRCH_property" id="saturday" type="checkbox" 
value="OpenSat">				                                                     <LABEL 
for="saturday">Saturday Hours</LABEL>				                                        
         </DIV>
<DIV class="checkbox"><INPUT name="BRCH_property" id="sunday" type="checkbox" 
value="OpenSun">				                                                     <LABEL 
for="sunday">Sunday Hours</LABEL>				                                            
     </DIV></DIV></FIELDSET>
<FIELDSET id="ATMGroup"><LEGEND class="filter__subheading">ATM <SPAN class="sr-only">Filters</SPAN></LEGEND>
				                                              
<DIV class="filter__checkboxes">
<DIV class="checkbox"><INPUT name="ATM_property" id="atmPreferences" type="checkbox" 
value="PreferenceAvailability">				                                              
       <LABEL for="atmPreferences">ATM Preferences</LABEL>				                   
                              </DIV>
<DIV class="checkbox"><INPUT name="ATM_property" id="acceptsDeposits" type="checkbox" 
value="FullFunction">				                                                     
<LABEL for="acceptsDeposits">Accepts Deposits</LABEL>				                        
                         </DIV>
<DIV class="checkbox"><INPUT name="ATM_property" id="driveUp" type="checkbox" 
value="DriveUpAccess">				                                                     
<LABEL for="driveUp">Drive-up Access</LABEL>				                                 
                </DIV>
<DIV class="checkbox"><INPUT name="ATM_property" id="espanol" type="checkbox" 
value="EnglishSpanish">				                                                     
<LABEL for="espanol">En Español</LABEL>				                                      
           </DIV>
<DIV class="checkbox"><INPUT name="ATM_property" id="miniStatement" type="checkbox" 
value="MiniStatements">				                                                     
<LABEL for="miniStatement">Mini-Statements</LABEL>				                           
                      </DIV>
<DIV class="checkbox"><INPUT name="ATM_property" id="francais" type="checkbox" 
value="EnglishFrench">				                                                     
<LABEL for="francais">En Français</LABEL>				                                    
             </DIV>
<DIV class="checkbox"><INPUT name="ATM_property" id="stamps" type="checkbox" 
value="Postage">				                                                     <LABEL 
for="stamps">U.S. Postage Stamps</LABEL>				                                     
            </DIV>
<DIV class="checkbox"><INPUT name="ATM_property" id="walkUp" type="checkbox" 
value="WalkUpAccess">				                                                     
<LABEL for="walkUp">Walk-up Access</LABEL>				                                   
              </DIV></DIV></FIELDSET><A class="btn btn--text btn--small mt1" id="clearBtn" 
href="https://www.key.com/locations/search#">Clear All</A>				                   
                  </DIV><BUTTON class="btn btn--small" 
id="btn-submit">Apply</BUTTON>				 </FORM></DIV></DIV>
<DIV class="loader" style="display: none;">Loading…</DIV>
<P class="filter__results-text no-results" id="err-msg"></P>
<DIV class="results" id="results"></DIV></DIV>
<DIV class="tab-map" id="map">
<DIV id="myMap" style="height: 400px;"></DIV>
<DIV class="promo__wrap">
<DIV class="tile " id="compare-loc-1217">
<P class="tile__heading">Looking for the right checking account?</P>
<DIV class="tile__rich">
<P>Find one that helps you reach your goals. Open a checking account that puts 
 your financial wellness at the center of everyday banking.</P></DIV><A class="tile__cta " 
href="https://www.key.com/personal/checking/checking-accounts-options.jsp?sqkl=locator_evergreen_checking_111517"> 
                                             Compare accounts	</A> 
</DIV></DIV></DIV></DIV></SECTION>
<SCRIPT src="Branch_Locator_KeyBank_files/locations.min.js"></SCRIPT>
					  
<SCRIPT src="Branch_Locator_KeyBank_files/handlebars.min.js" type="text/javascript"></SCRIPT>
					  
<SCRIPT id="results-template" type="text/template">
					{{#.}}
					<article id="{{properties.LocationID}}" class="card {{#ifCond properties.LocationType '==' 'MCD'}} is--kpb {{/ifCond}}" aria-labelledby="card-heading-{{index}}" data-city="{{properties.Locality}}" data-state="{{properties.Subdivision}}">
						<div class="card__header">
							<span class="card__heading" data-index="{{index}}" id="card-heading-{{index}}">{{properties.LocationName}}</span>
							<span class="card__subheading">{{distance}}</span>
						</div>

						<div class="card__rich">

							<div class="location-branch">
								<span>{{properties.AddressLine}}</span>
								<span>{{properties.Locality}}, {{properties.Subdivision}} {{properties.PostalCode}}</span>
								<span>{{properties.Phone1}}</span>
							</div>

							<div class="branch-atm">
								<span>{{#ifCond properties.LocationType '==' 'BRCH'}}Branch{{else}}{{#ifCond properties.LocationType '==' 'ATM'}}ATM{{else}}Office{{/ifCond}}{{/ifCond}}
								{{#ifCond properties.LocationType '==' 'BRCH'}}{{#ifCond properties.ATMAvailable '==' 'Y'}}, ATM{{/ifCond}}{{/ifCond}}
								</span>
								{{#ifCond properties.LocationType '!=' 'ATM'}}
								{{#ifCond properties.today '==' '1'}} {{#ifCond properties.MonHours '!=' ''}}<span class="openhours">Open Today:</span><span>{{properties.MonHours}}</span>{{/ifCond}}{{/ifCond}}
								{{#ifCond properties.today '==' '2'}}{{#ifCond properties.TueHours '!=' ''}}<span class="openhours">Open Today:</span><span>{{properties.TueHours}}</span>{{/ifCond}}{{/ifCond}}
								{{#ifCond properties.today '==' '3'}}{{#ifCond properties.WedHours '!=' ''}}<span class="openhours">Open Today:</span><span>{{properties.WedHours}}</span>{{/ifCond}}{{/ifCond}}
								{{#ifCond properties.today '==' '4'}}{{#ifCond properties.ThuHours '!=' ''}}<span class="openhours">Open Today:</span><span>{{properties.ThuHours}}</span>{{/ifCond}}{{/ifCond}}
								{{#ifCond properties.today '==' '5'}}{{#ifCond properties.FriHours '!=' ''}}<span class="openhours">Open Today:</span><span>{{properties.FriHours}}</span>{{/ifCond}}{{/ifCond}}
								{{#ifCond properties.today '==' '6'}}
									{{#ifCond properties.OpenSat '==' 'Y'}}
											<span class="openhours">Open Today:</span><span>{{properties.SatHours}}</span>
									{{else}}
										Closed Today
									{{/ifCond}}
								{{/ifCond}}
								{{#ifCond properties.today '==' '0'}}
									{{#ifCond properties.OpenSun '==' 'Y'}}
										<span class="openhours">Open Today:</span><span>{{properties.SunHours}}</span>
									{{else}}
										Closed Today
									{{/ifCond}}
								{{/ifCond}}
								{{else}}
								<span class="openhours">Open Today:</span><span>{{properties.HoursOfOperation}}</span>
								{{/ifCond}}
							</div>

						</div>

						<div class="card__links">
							{{#ifCond properties.LocationType '!=' 'ATM'}}
							<a href="/locations/{{properties.SubdivisionUri}}/{{properties.LocalityUri}}/{{properties.LocationID}}/{{properties.AddressUri}}">View {{#ifCond properties.LocationType '==' 'BRCH'}}branch{{else}}office{{/ifCond}} details</a>
							{{/ifCond}}
							<a href="https://www.bing.com/maps/default.aspx?where1={{properties.AddressLine}}%20{{properties.Locality}}%20{{properties.Subdivision}}%20{{properties.PostalCode}}" target="_blank">Driving directions</a>

						</div>

					</article>
						{{/.}}
					</SCRIPT>
										  
<SCRIPT>
					if (!String.prototype.startsWith) {
					    String.prototype.startsWith = function(searchString, position){
					      return this.substr(position || 0, searchString.length) === searchString;
					  };
					}
					Handlebars.registerHelper('ifCond', function (v1, operator, v2, options) {
					switch (operator) {
					case '==':
					return (v1 == v2) ? options.fn(this) : options.inverse(this);
					case '===':
					return (v1 === v2) ? options.fn(this) : options.inverse(this);
					case '!=':
					return (v1 != v2) ? options.fn(this) : options.inverse(this);
					case '!==':
					return (v1 !== v2) ? options.fn(this) : options.inverse(this);
					case '<':
					return (v1 < v2) ? options.fn(this) : options.inverse(this);
					case '<=':
					return (v1 <= v2) ? options.fn(this) : options.inverse(this);
					case '>':
					return (v1 > v2) ? options.fn(this) : options.inverse(this);
					case '>=':
					return (v1 >= v2) ? options.fn(this) : options.inverse(this);
					case '&&':
					return (v1 && v2) ? options.fn(this) : options.inverse(this);
					case '||':
					return (v1 || v2) ? options.fn(this) : options.inverse(this);
					default:
					return options.inverse(this);
					}
					});

					var map,searchManager;
					var SEARCH_DISTANCE = 50;  // search distance in miles
					var KILO_TO_MILES = 1.609344*SEARCH_DISTANCE; //search distance in KM
					var query ="";
					var filterForm = document.getElementById('filterForm');
					var errMsg = document.getElementById("err-msg");
					var ERROR_MSG = 'No results found within '+SEARCH_DISTANCE+' miles.  Please try a new search.';

					function getAllUrlParams(url) {
					  // get query string from url (optional) or window
					  var queryString = url ? url.split('?')[1] : window.location.search.slice(1);
					  // we'll store the parameters here
					  var obj = {};
					  // if query string exists
					  if (queryString) {
						// stuff after # is not part of query string, so get rid of it
						queryString = queryString.split('#')[0];
						// split our query string into its component parts
						var arr = queryString.split('&');
						for (var i=0; i<arr.length; i++) {
						  // separate the keys and the values
						  var a = arr[i].split('=');
						  // in case params look like: list[]=thing1&list[]=thing2
						  var paramNum = undefined;
						  var paramName = a[0].replace(/\[\d*\]/, function(v) {
							paramNum = v.slice(1,-1);
							return '';
						  });
						  // set parameter value (use 'true' if empty)
						  var paramValue = typeof(a[1])==='undefined' ? true : a[1];
						  // (optional) keep case consistent
						  //paramName = paramName.toLowerCase();
						  //paramValue = paramValue.toLowerCase();
						  // if parameter name already exists
						  if (obj[paramName]) {
							// convert value to array (if still string)
							if (typeof obj[paramName] === 'string') {
							  obj[paramName] = [obj[paramName]];
							}
							// if no array index number specified...
							if (typeof paramNum === 'undefined') {
							  // put the value on the end of the array
							  obj[paramName].push(paramValue);
							}
							// if array index number specified...
							else {
							  // put the value at that index number
							  obj[paramName][paramNum] = paramValue;
							}
						  }else {
							obj[paramName] = paramValue;
						  }
						}
					  }
					  return obj;
					}


					var params = getAllUrlParams();


					if(params.q != undefined ){
						query = params.q;
						if(query.length >0 ){
							query =decodeURIComponent(query.replace(/\+/g, "%20"));
							document.getElementById("locationSearch").value = query;
						}
						
					}
					LoadJS("https://www.bing.com/api/maps/mapcontrol?callback=initMap");


					function initMap() {
						map = new Microsoft.Maps.Map('#myMap', {
							credentials: 'Aj-hwh2xyjoFLeTf0llgH4pY79OimAA8T6c6xmBx-TklK_IUUpYpcfRri-sNcXGt',
							showMapTypeSelector: false
						});
						
						//Create an infobox at the center of the map but don't show it.
				        infobox = new Microsoft.Maps.Infobox(map.getCenter(), {
				            visible: false
				        });

				        //Assign the infobox to a map instance.
				        infobox.setMap(map);
						find();
					}

					function find(){
						clearResult();
						showSpinWheel();
						if(document.getElementById("locationSearch").value.length > 0){
							try {
								Microsoft.Maps.loadModule('Microsoft.Maps.Search', function () {
								searchManager = new Microsoft.Maps.Search.SearchManager(map);
							
								searchManager.geocode({
									where: document.getElementById("locationSearch").value,
									callback: function(r){
										console.log("find() function : geocode callback method");
										getEntities(r.results[0].location);
									},
									errorCallback: function (e) {
										//If there is an error, alert the user about it.
										console.log(e);
										//alert('No results found within '+SEARCH_DISTANCE+' miles.  Please try a new search.');
										hideSpinWheel();
										errMsg.innerHTML = ERROR_MSG ;
									}
								});
							});
							}
							catch(e) {
								//if (DEBUG) alert(e.message);
							}
						}
						else{
							if (navigator.geolocation) {
								console.log("Geolocation is supported by this browser.");
								navigator.geolocation.getCurrentPosition(function(position){
									getEntities({latitude : position.coords.latitude,longitude:position.coords.longitude});
									try {
										Microsoft.Maps.loadModule('Microsoft.Maps.Search', function () {
										searchManager = new Microsoft.Maps.Search.SearchManager(map);
									
										searchManager.reverseGeocode({
											location: new Microsoft.Maps.Location(position.coords.latitude,position.coords.longitude),
											callback: function(r){
												console.log("find() function : reverse geocode callback method");
												document.getElementById("locationSearch").value = r.address.postalCode;
											},
											errorCallback: function (e) {
												//If there is an error, alert the user about it.
												console.log("location address not available");
												hideSpinWheel();
											}
										});
									});
									}
									catch(e) {
										console.log("Geolocation is not available");
										hideSpinWheel();
										console.log(e.message);
									}
								}, function(){
									console.log("Geolocation is not available");
									hideSpinWheel();
								});
							} else { 
								var error = "Geolocation is not supported by this browser.";
								hideSpinWheel();
								console.log(error);
							}
						}
					}

					function getSearchEntityParms(){
						var entityParam = "";
						var entity = "";
						var query = "";
						var advFilter = null ;
						var filter= "";
						var filterSelect = document.getElementById('filterTypes');
						var brchFilter = filterForm.querySelectorAll('input[name=BRCH_property]');
						var atmFilter = filterForm.querySelectorAll('input[name=ATM_property]');
						var event = new CustomEvent("click");
						if(typeof (params.entity) === 'string'){
							Array.prototype.forEach.call(filterSelect.options,function(option,index) {
								//console.log(option);
								if (option.value == params.entity)			
								{
									option.selected = true;
								}
							});
							//var event = new Event("change");
							var event = new CustomEvent("change");
							// Dispatch/Trigger/ event
							filterSelect.dispatchEvent(event);
						}
						
						if(params.BRCH_property != null && typeof (params.BRCH_property) != 'string'){
							Array.prototype.forEach.call(params.BRCH_property,function(prop,index) {
								console.log(prop);
								filterForm.querySelector('input[name=BRCH_property][value='+prop+']').checked = true;
							});
						}
						else if(params.BRCH_property != null && typeof (params.BRCH_property) === 'string'){
							console.log(params.BRCH_property);
							filterForm.querySelector('input[name=BRCH_property][value='+params.BRCH_property+']').checked = true;
						}
						
						if(params.ATM_property != null && typeof (params.ATM_property) != 'string'){
							Array.prototype.forEach.call(params.ATM_property,function(prop,index) {
								console.log(prop);
								filterForm.querySelector('input[name=ATM_property][value='+prop+']').checked = true;
							});
						}
						else if(params.ATM_property != null && typeof (params.ATM_property) === 'string'){
							console.log(params.ATM_property);
							filterForm.querySelector('input[name=ATM_property][value='+params.ATM_property+']').checked = true;
							//filterForm.querySelector("button.toggle").dispatchEvent(event);
						}
						
						
						entity = filterForm.dataset.selected;
						query = document.getElementById("locationSearch").value;
						
						
						if(entity === "partner"){
							entityParam =  "&entity=ATM";
						}else{
							entityParam =  "&entity="+filterForm.dataset.selected;
							if(entity === "ATM"){
								advFilter = atmFilter;
							}
							else if(entity === "BRCH"){
								advFilter = brchFilter;
							}
						}
						
						if(advFilter != null){
							Array.prototype.forEach.call(advFilter,function(el,index) {
								if(el.checked){
									entityParam += "&"+ el.name+"="+el.value + "&";
									filter += "&"+ el.name+"="+el.value ;
								}
							});
						}
						
						if(params.q != query || params.entity != entity){
							var url = "/locations/search?entity="+entity+"&q="+ query + filter;
							window.history.replaceState({},"",url);
						}
						
						return entityParam;
					}

					function getEntities(location) {
						console.log(location);
						var searchLatLon = location;
						var searchparms = getSearchEntityParms();
						var url = serviceUrl +"?action=getEntities"+searchparms+"&lat="+searchLatLon.latitude+"&lng="+searchLatLon.longitude+"&distance="+KILO_TO_MILES+"&results=40&callback=myJsonpCallback";
						LoadJS(url);
					}

					function LoadJS(url){
						var scriptEl = document.createElement('script');
						scriptEl.setAttribute('src',url);
						document.body.appendChild(scriptEl);
					}

					window.myJsonpCallback = function(data) {
						if(data != null && data.length > 0){
							processBranch(data);
						}
						else{
							hideSpinWheel();
							errMsg.innerHTML = ERROR_MSG ;
						}
					};

					function processBranch(data){
					var branches = [];
					var pins = [];
					var locs = [];
					var i = 1;

					data.some(function(branch,index) {
						if((branch.properties.LocationType == filterForm.dataset.selected || (!branch.properties.LocationID.startsWith("ATMKB")))&& branch.properties.Locality.toLowerCase() != "tbd"){
							var location = new Microsoft.Maps.Location(branch.location.latLong.latitude, branch.location.latLong.longitude);
							locs.push(location);
							branch.index = i;
							branch.distance = (branch.properties.Distance * 0.621371192).toFixed(1) + "mi";
							branch.properties.SubdivisionUri = branch.properties.Subdivision.toLowerCase();
							branch.properties.AddressUri = branch.properties.AddressLine.toLowerCase().replace(/\s/g, "-").replace(/\./g, "");
							branch.properties.LocalityUri = branch.properties.Locality.toLowerCase().replace(/\s/g, "-");
							branch.properties.today = new Date().getDay();
							if(branch.properties.LocationName.startsWith("KPB-")){
								branch.properties.LocationName = branch.properties.LocationName.replace(/KPB-/g, "Key Private Bank - ");
							}
							branches.push(branch);
							var img = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><path fill="#c00" d="M50 5.1c-17.8 0-32.8 14.3-34 32.6-.4 8.4 2.1 16.6 7.2 23.3l24.4 32.7c1 1.3 2.9 1.6 4.2.6l.6-.6L76.8 61c5.1-6.7 7.7-14.9 7.2-23.3C82.8 19.4 67.8 5.1 50 5.1zm0 47.1c-8 0-14.5-6.4-14.6-14.4 0-8 6.4-14.5 14.4-14.6s14.5 6.4 14.6 14.4v.1c0 8-6.4 14.5-14.4 14.5z"/><circle cx="50" cy="35.4" r="20.2" fill="#FFF"/></svg>';
							var partnerAtmIcon = "<svg width='44' height='54' viewBox='0 0 44 54' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'> <defs> <path d='M0 15.4C0 26.84 16 42 16 42s16-15.16 16-26.6C32 6.82 24.914 0 16 0S0 6.82 0 15.4z' id='b'/>  </defs> <g transform='translate(6 4)' fill='none' fill-rule='evenodd'> <use fill='#000' filter='url(#a)' xlink:href='#b'/> <use fill='#575C67' xlink:href='#b'/> <circle fill='#FFF' cx='16' cy='16' r='11'/> <text font-family='Helvetica Neue' font-size='12' font-weight='500' fill='#000'> <tspan x='16' y='20' text-anchor='middle'>"+ (i) +"</tspan> </text> </g> </svg>"
							var brchIcon ="<svg width='44' height='54' viewBox='0 0 44 54' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'> <defs> <path d='M0 15.4C0 26.84 16 42 16 42s16-15.16 16-26.6C32 6.82 24.914 0 16 0S0 6.82 0 15.4z' id='b'/>  </defs> <g transform='translate(6 4)' fill='none' fill-rule='evenodd'> <use fill='#000' filter='url(#a)' xlink:href='#b'/> <use fill='#C91500' xlink:href='#b'/> <circle fill='#FFF' cx='16' cy='16' r='11'/> <text font-family='Helvetica Neue' font-size='12' font-weight='500' fill='#000'> <tspan x='16' y='20' text-anchor='middle'> "+ (i)+" </tspan> </text> </g> </svg>";
							var mcdIcon = "<svg width='44' height='54' viewBox='0 0 44 54' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'> <defs> <path d='M0 15.4C0 26.84 16 42 16 42s16-15.16 16-26.6C32 6.82 24.914 0 16 0S0 6.82 0 15.4z' id='b'/>  </defs> <g transform='translate(6 4)' fill='none' fill-rule='evenodd'> <use fill='#000' filter='url(#a)' xlink:href='#b'/> <use fill='#000' xlink:href='#b'/> <circle fill='#FFF' cx='16' cy='16' r='11'/> <text font-family='Helvetica Neue' font-size='12' font-weight='500' fill='#000'> <tspan x='16' y='20' text-anchor='middle'>"+ (i)+"</tspan> </text> </g> </svg>";
							if(branch.properties.LocationType === "MCD"){
							 	img = mcdIcon;
							}
							else if(branch.properties.LocationType === "ATM" && !branch.properties.LocationID.startsWith("ATMKB")){
							 	img = partnerAtmIcon;
							}
							else{
								img = brchIcon;
							}
							var pin = new Microsoft.Maps.Pushpin(location,{
									icon:img
							   });
							   
							pin.metadata = {
								branch:branch,
								location: location
							}
							
							 //Add a click event handler to the pushpin.
				            Microsoft.Maps.Events.addHandler(pin, 'click', pushpinClicked);
							
							pins.push(pin);
							i++;
						}
						return i==26;
					});
					hideSpinWheel();
					if( branches.length > 0){
						var source1   = document.getElementById("results-template").innerHTML;
						var template1 = Handlebars.compile(source1);
						var output1    = template1(branches);
						//document.getElementById("results").innerHTML = output1;
						document.querySelector(".results").insertAdjacentHTML('beforeend',output1);
						if(locs.length > 1){
							//Use the locations from the results to calculate a bounding box.
							var bounds = Microsoft.Maps.LocationRect.fromLocations(locs);
							map.setView({ bounds: bounds,padding: 50 });
						}else if(locs.length === 1){
							map.setView({center: locs[0], zoom: 15 });
						}
					
						//Add the pins to the map
						map.entities.push(pins);
						var xmlhttp = new XMLHttpRequest();
						var url = "/about/locations/locator-alert.jsp";
						
						xmlhttp.onreadystatechange = function() {
							if (this.readyState == 4 && this.status == 200) {
								if(this.responseText.length > 0){
									var arr = JSON.parse(this.responseText);
									processAlert(arr);
								}
							}
						};
						xmlhttp.open("GET", url, true);
						if(filterForm.dataset.selected != "ATM" && filterForm.dataset.selected != "partner"){
							xmlhttp.send();
						}
					}
					else{
						errMsg.innerHTML = ERROR_MSG ;
					}
				}
					function pushpinClicked(e) {
				        //Make sure the infobox has metadata to display.
				        if (e.target.metadata) {
				            //Set the infobox options with the metadata of the pushpin.
				            console.log(e.target.metadata);
				            var branch = e.target.metadata.branch;
				            var card = document.getElementById(branch.properties.LocationID);
				            var atmBranch = card.querySelector(".branch-atm > span").textContent;
				            var timeHeading = card.querySelector(".openhours").textContent;
				            var time = card.querySelector(".openhours + span").textContent;

							map.setView({ center: e.target.metadata.location, centerOffset: new Microsoft.Maps.Point(0, 125) });

				            infobox.setOptions({
				                location: e.target.getLocation(),
				                title:branch.index + " "+ branch.properties.LocationName,
				                description:"<p class=\"address__type\">"+atmBranch+"</p><p class=\"address__open\"><span class=\"address__open-prefix\">" + timeHeading + "</span> " +time+"</p><p class=\"address__line\">"+branch.properties.AddressLine+"</p><p class=\"address__line\">"+branch.properties.Locality + " "+ branch.properties.Subdivision+" " + branch.properties.PostalCode  + "</p> <p class=\"address__line\">"+branch.properties.Phone1+"</p>",
				                offset: new Microsoft.Maps.Point(0, 35),
								maxWidth:350,
				           		maxHeight:250,
				          		visible: true
				            });
				            if(branch.properties.LocationType==="BRCH" || branch.properties.LocationType==="MCD"){
				            	var str = (branch.properties.LocationType==="MCD" ? "View office details":"View branch details")
					            infobox.setOptions({
					                actions: [{
					                	label: 'Driving directions',
						                eventHandler: function () {
						                	window.open("https://www.bing.com/maps/default.aspx?where1="+branch.properties.AddressLine+"%20"+branch.properties.Locality+"%20"+branch.properties.Subdivision+"%20"+branch.properties.PostalCode);
						                }
						            	},{
						                label: str,
						                eventHandler: function () {
											window.location = "/locations/"+branch.properties.SubdivisionUri+"/"+branch.properties.LocalityUri+"/"+branch.properties.LocationID+"/"+branch.properties.AddressUri;
						                }
						            }]
					            });
				            }
				            else{
				            	infobox.setOptions({
				                	actions: [{
					                	label: 'Driving directions',
						                eventHandler: function () {
						                	window.open("https://www.bing.com/maps/default.aspx?where1="+branch.properties.AddressLine+"%20"+branch.properties.Locality+"%20"+branch.properties.Subdivision+"%20"+branch.properties.PostalCode);
						                }
					            	}]
				            	});
				            }
				        }
				    }
					function processAlert(arr){
						var cards = document.querySelectorAll('article.card');
						var startTag = "<section class=\"warning-bg\"><div class=\"block block--alert\"><div class=\"block__rich\"><ul>";
						var endTag = "</ul></div></div></section>";
						
						Array.prototype.forEach.call(cards,function(el,index) {
							var city = el.dataset.city.toUpperCase();
							var state = el.dataset.state;
							var message ="";
							var closureMsg = "";
							
							if(arr.states.ALL != undefined){
								message = getAlertMessage(arr.states.ALL);
								closureMsg = getClosureMessage(arr.states.ALL);
								//nav.insertAdjacentHTML('afterend',startTag+ "<ul>"+message+"</ul>" +endTag);
							}
							
							if(arr.states[state] != undefined){
								message += getAlertMessage(arr.states[state]);
								var str = getClosureMessage(arr.states[state]);
								if(str.length > 0){
									closureMsg = str;
								}
								//nav.insertAdjacentHTML('afterend',startTag+ "<ul>"+message+"</ul>" +endTag);
							}
							
							if(arr.cities[city.replace(/\s/g, "")+"_"+state] != undefined){
								message += getAlertMessage(arr.cities[city.replace(/\s/g, "")+"_"+state]) ;
								var str = getClosureMessage(arr.cities[city.replace(/\s/g, "").toUpperCase()+"_"+state]);
								if(str.length > 0){
									closureMsg = str;
								}
							}
							
							if(arr.branches[el.id] != undefined){
								message += getAlertMessage(arr.branches[el.id]);
								var str = getClosureMessage(arr.branches[el.id]);
								if(str.length > 0){
									closureMsg = str;
								}
							}
							if(message.length > 0){
								document.getElementById(el.id).insertAdjacentHTML('beforeend',startTag+message+endTag);
							}
							if(closureMsg.length > 0){
								document.getElementById(el.id).querySelector(".openhours").textContent = closureMsg; 
								document.getElementById(el.id).querySelector(".openhours + span").textContent = ""; 
							}
						});
					}
					
				function getAlertMessage(alerts){
					var message = "";
					var currentDate = new Date();
					for(index in alerts){
						var alert = alerts[index];
						if(alert.message != undefined && alert.message.length > 0){
							if(alert.startDate.length > 0 & alert.endDate.length > 0){
								var fromDate = new Date(Date.parse(alert.startDate));
								var toDate = new Date(Date.parse(alert.endDate));
								if(fromDate<= currentDate & toDate >= currentDate){
									message += "<li>" +  alert.message + "</li>" ;
								}
							}
							else if(alert.startDate.length > 0){
								var fromDate = new Date(Date.parse(alert.startDate));
								if(fromDate<= currentDate){
									message += "<li>" + alert.message +"</li>";
								}
							}
							else if(alert.endDate.length > 0){
								var toDate = new Date(Date.parse(alert.endDate));
								if(toDate >= currentDate){
									message += "<li>" + alert.message + "</li>" ;
								}
							}
							else{
								message += "<li>" + alert.message + "</li>";
							}
						}
					}
					return message;
				}
				function getClosureMessage(alerts){
					var message = "";
					for(index in alerts){
						var alert = alerts[index];
						if(alert.branchesClosed){
							var currentDate = new Date();
							var nextWeekDate = new Date();
							var fromDate,toDate;
							nextWeekDate.setDate(nextWeekDate.getDate()+6)
							nextWeekDate.setHours(23,59,59,999);
							//console.log(nextWeekDate);
						
							if(alert.startDate.length > 0 && alert.endDate.length > 0){
								fromDate = new Date(Date.parse(alert.startDate));
								toDate = new Date(Date.parse(alert.endDate));
								fromDate = (fromDate.getDate() <= currentDate.getDate()? currentDate : fromDate);
								toDate = (toDate.getDate() > currentDate.getDate()+6 ? nextWeekDate : toDate);
							}
							else if(alert.startDate.length > 0){
								var fromDate = new Date(Date.parse(alert.startDate));
								fromDate = (fromDate.getDate() <= currentDate.getDate()? currentDate : fromDate);
								toDate = nextWeekDate;
							}
							else if(alert.endDate.length > 0){
								fromDate = currentDate;
								var toDate = new Date(Date.parse(alert.endDate));
								toDate = (toDate.getDate() > currentDate.getDate()+6 ? nextWeekDate : toDate);
							}
							else{
								fromDate = currentDate;
								toDate = nextWeekDate;
							}
							console.log(fromDate);
							console.log(toDate);
							
							if(new Date() >= fromDate && new Date() <= toDate){
								if(alert.closureMsg != undefined && alert.closureMsg.length > 0){
									message=alert.closureMsg;
								}
							}
						}
					}
					return message;
				}	
					function clearResult() {
						errMsg.innerHTML = "";
						document.getElementById("results").innerHTML = "";	
						infobox.setOptions({visible: false});
						map.entities.clear();
					}
					function filterResult(e){
						e.preventDefault();
						params.entity = null;
						params.BRCH_property = null;
						params.ATM_property = null;
						find();
					}
					
					function hideSpinWheel(){
						document.querySelector(".loader").style.display = 'none';
					}
					
					function showSpinWheel(){
						document.querySelector(".loader").style.display = 'block';
					}

					document.getElementById("btn-submit").addEventListener("click", filterResult);
					document.onreadystatechange = function () {
					  if (document.readyState === "complete" && params.entity != null && ((params.entity === "BRCH" && params.BRCH_property != null) || (params.entity === "ATM" && params.ATM_property != null ))) {
						filterForm.querySelector("button.toggle").dispatchEvent(new CustomEvent("click"));
					  }
					}

					</SCRIPT>
		 </main><!-- Footer--><FOOTER id="footer"> 
<DIV class="links links--footer">
<DIV class="links__content">
<DIV class="links__group">
<DIV class="links__group-item">
<DIV class="tile"><SPAN class="tile__heading">Personal</SPAN>
<UL class="list">
  <LI class="list__li"><A class="list__a" href="https://www.key.com/about/index.jsp">About 
    Key</A></LI>
  <LI class="list__li"><A class="list__a" href="https://www.key.com/personal/contact-us.jsp">Contact 
    Us</A></LI>
  <LI class="list__li"><A class="list__a" href="https://www.key.com/to/obi+careers">Careers</A></LI>
  <LI class="list__li"><A class="list__a" href="https://www.key.com/to/ir+overview">Investors</A></LI>
  <LI class="list__li"><A class="list__a" href="https://www.key.com/to/key+atmlocator">Branch 
    &amp; ATM Locations</A></LI>
  <LI class="list__li"><A class="list__a" href="https://www.key.com/personal/espanol/index.jsp">Español</A></LI>
  <LI class="list__li"><A class="list__a" href="https://www.key.com/about/company-information/key-supplier-diversity.jsp">Suppliers</A></LI>
  <LI class="list__li"><A class="list__a" href="https://www.key.com/about/corporate-responsibility/diversity-and-inclusion.jsp">Diversity</A></LI></UL></DIV></DIV>
<DIV class="links__group-item">
<DIV class="tile social white"><SPAN class="tile__heading">Connect With 
 Us</SPAN>
<UL class="list">
  <LI class="list__li twitter"><A class="list__a" href="https://www.key.com/to/key+twitter" 
  target="_blank"><SPAN class="sr-only">Follow Us on Twitter</SPAN><SPAN class="sr-only">on 
    Twitter</SPAN></A></LI>
  <LI class="list__li facebook"><A class="list__a" href="https://www.key.com/to/key+facebook" 
  target="_blank"><SPAN class="sr-only">Like Us on Facebook</SPAN><SPAN class="sr-only">on 
    Facebook</SPAN></A></LI>
  <LI class="list__li linkedin"><A class="list__a" href="https://www.key.com/to/key+linkedin" 
  target="_blank"><SPAN class="sr-only">Connect With Us on LinkedIn</SPAN><SPAN 
  class="sr-only">on LinkedIn</SPAN></A></LI>
  <LI class="list__li youtube"><A class="list__a" href="https://www.key.com/to/key+youtube" 
  target="_blank"><SPAN class="sr-only">Subscribe to Us on YouTube</SPAN><SPAN 
  class="sr-only">on YouTube</SPAN></A></LI></UL></DIV></DIV>
<DIV class="links__group-item">
<DIV class="tile legal">
<UL class="list">
  <LI class="list__li ehl"><A class="list__a" href="https://www.key.com/kco/images/fairlend.pdf" 
  target="_blank"><SPAN class="sr-only">Equal Housing Lender</SPAN></A></LI>
  <LI class="list__li fdic"><A class="list__a" href="https://www.key.com/to/fdic+home" 
  target="_blank"><SPAN class="sr-only">Member FDIC</SPAN></A></LI>
  <LI class="list__li"><A class="list__a" href="https://www.key.com/about/misc/user-agreement.jsp">User 
    Agreement</A></LI>
  <LI class="list__li"><A class="list__a" href="https://www.key.com/about/misc/online-privacy-statement.jsp">Online 
    Privacy Statement</A></LI>
  <LI class="list__li"><A class="list__a" href="https://www.key.com/about/security/privacy-security.jsp">Your 
    Privacy and Security</A></LI></UL></DIV></DIV>
<DIV class="links__group-item">
<DIV class="tile rich">
<P>©<SPAN id="copyright-footer-year">2018</SPAN> KeyCorp<SUP>®</SUP> All Rights 
 Reserved.</P></DIV></DIV></DIV></DIV></DIV></FOOTER></DIV><!-- /#wrapper --> 	 
<SCRIPT src="Branch_Locator_KeyBank_files/main.min.js"></SCRIPT>
          
<SCRIPT type="text/javascript">
	if (typeof COPYRIGHT_FOOTER_DATE != 'undefined') {
	   document.getElementById("copyright-footer-year").textContent = COPYRIGHT_FOOTER_DATE ;
	}
       </SCRIPT>
  
<SCRIPT type="text/javascript">
var pageInstance = "Keybank Locations : Search-PD".replace(/[:|\s]/g, "");
var digitalData = {
                pageInstanceID: pageInstance,
                page: {
                                pageInfo: {
                                                pageID: "Keybank Locations : Search",
                                                destinationURL: "/locations/search",
                                                category: {
                                                                primaryCategory: "locator",
                                                                pageType: "Tool"
                                                },
                                                attributes: {
                                                                country: "US",
                                                                language: "en-US"
                                                }
                                }
                }
};
                _satellite.pageBottom();
</SCRIPT>
	  </BODY></HTML>
